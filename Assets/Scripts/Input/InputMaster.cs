//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""8e0c4647-00fb-4dfe-a97f-7a3220b13c46"",
            ""actions"": [
                {
                    ""name"": ""Run"",
                    ""type"": ""Value"",
                    ""id"": ""57cde48c-8748-496c-92a9-13ab3b766e48"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Strike"",
                    ""type"": ""Button"",
                    ""id"": ""af18f7ac-297e-4a04-8562-55176c11d8b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowEgg"",
                    ""type"": ""Button"",
                    ""id"": ""e439eb1e-cf20-4146-a95e-303799f841d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""68359253-e846-4b80-b636-1d6982edd30d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Eat"",
                    ""type"": ""Button"",
                    ""id"": ""4234febe-6654-4296-a5e1-11a9afce88d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1ef519bf-539e-48e6-bb3c-a0005298acd8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4567eaf3-67d1-41b0-bf45-12d492c1f879"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8698e3cb-e518-4906-8b32-ec520273d65e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0a3f1eae-e989-4473-bf27-87cab6ddc984"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strike"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e526848d-083f-4695-89b6-0f9ae42b6afb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6871a43b-a902-4bd3-8d6d-b1861d7b5585"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0479116-dbb2-4f31-a393-69773a03b956"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowEgg"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_Run = m_Keyboard.FindAction("Run", throwIfNotFound: true);
        m_Keyboard_Strike = m_Keyboard.FindAction("Strike", throwIfNotFound: true);
        m_Keyboard_ThrowEgg = m_Keyboard.FindAction("ThrowEgg", throwIfNotFound: true);
        m_Keyboard_Jump = m_Keyboard.FindAction("Jump", throwIfNotFound: true);
        m_Keyboard_Eat = m_Keyboard.FindAction("Eat", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_Run;
    private readonly InputAction m_Keyboard_Strike;
    private readonly InputAction m_Keyboard_ThrowEgg;
    private readonly InputAction m_Keyboard_Jump;
    private readonly InputAction m_Keyboard_Eat;
    public struct KeyboardActions
    {
        private @InputMaster m_Wrapper;
        public KeyboardActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Run => m_Wrapper.m_Keyboard_Run;
        public InputAction @Strike => m_Wrapper.m_Keyboard_Strike;
        public InputAction @ThrowEgg => m_Wrapper.m_Keyboard_ThrowEgg;
        public InputAction @Jump => m_Wrapper.m_Keyboard_Jump;
        public InputAction @Eat => m_Wrapper.m_Keyboard_Eat;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @Run.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRun;
                @Strike.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnStrike;
                @Strike.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnStrike;
                @Strike.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnStrike;
                @ThrowEgg.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnThrowEgg;
                @ThrowEgg.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnThrowEgg;
                @ThrowEgg.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnThrowEgg;
                @Jump.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Eat.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEat;
                @Eat.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEat;
                @Eat.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEat;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Strike.started += instance.OnStrike;
                @Strike.performed += instance.OnStrike;
                @Strike.canceled += instance.OnStrike;
                @ThrowEgg.started += instance.OnThrowEgg;
                @ThrowEgg.performed += instance.OnThrowEgg;
                @ThrowEgg.canceled += instance.OnThrowEgg;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Eat.started += instance.OnEat;
                @Eat.performed += instance.OnEat;
                @Eat.canceled += instance.OnEat;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void OnRun(InputAction.CallbackContext context);
        void OnStrike(InputAction.CallbackContext context);
        void OnThrowEgg(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnEat(InputAction.CallbackContext context);
    }
}
